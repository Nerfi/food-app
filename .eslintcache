[{"/home/juanfran/code/Nerfi/food-app/src/index.js":"1","/home/juanfran/code/Nerfi/food-app/src/App.js":"2","/home/juanfran/code/Nerfi/food-app/src/reportWebVitals.js":"3","/home/juanfran/code/Nerfi/food-app/src/components/DisplayFood.js":"4","/home/juanfran/code/Nerfi/food-app/src/components/UI/FoodCard.js":"5","/home/juanfran/code/Nerfi/food-app/src/components/UI/Home.js":"6","/home/juanfran/code/Nerfi/food-app/src/components/UI/Navbar.js":"7","/home/juanfran/code/Nerfi/food-app/src/components/SingleMeal.js":"8","/home/juanfran/code/Nerfi/food-app/src/components/UI/AboutUs.js":"9","/home/juanfran/code/Nerfi/food-app/src/components/RandomMeal.js":"10","/home/juanfran/code/Nerfi/food-app/src/components/UI/TagsSelection.js":"11","/home/juanfran/code/Nerfi/food-app/src/AuthContext/UserContext.js":"12","/home/juanfran/code/Nerfi/food-app/src/firebase/firebase.js":"13"},{"size":478,"mtime":1609686450332,"results":"14","hashOfConfig":"15"},{"size":801,"mtime":1609762240676,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1606663036684,"results":"17","hashOfConfig":"15"},{"size":976,"mtime":1609755807686,"results":"18","hashOfConfig":"15"},{"size":789,"mtime":1609755790049,"results":"19","hashOfConfig":"15"},{"size":511,"mtime":1609261962781,"results":"20","hashOfConfig":"15"},{"size":601,"mtime":1609762881234,"results":"21","hashOfConfig":"15"},{"size":2614,"mtime":1609755730967,"results":"22","hashOfConfig":"15"},{"size":1335,"mtime":1608552654148,"results":"23","hashOfConfig":"15"},{"size":1562,"mtime":1609756621031,"results":"24","hashOfConfig":"15"},{"size":1120,"mtime":1609756584215,"results":"25","hashOfConfig":"15"},{"size":1097,"mtime":1609762125303,"results":"26","hashOfConfig":"15"},{"size":609,"mtime":1609762513839,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"m1ab01",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/juanfran/code/Nerfi/food-app/src/index.js",[],["59","60"],"/home/juanfran/code/Nerfi/food-app/src/App.js",[],"/home/juanfran/code/Nerfi/food-app/src/reportWebVitals.js",[],"/home/juanfran/code/Nerfi/food-app/src/components/DisplayFood.js",["61","62"],"import React,{useState, useEffect} from 'react';\nimport FoodCard from './UI/FoodCard';\nimport './DisplayFood.css';\n\nfunction DisplayFoods() {\n\n  const [foods , setFoods] = useState([]);\n  const [error, setError] = useState(null);\n\n  //useEffect API call\n  useEffect(() => {\n\n      const getFoodsResponse = async () => {\n\n        const API_SECRET = process.env.REACT_APP_FOOD_KEY;\n        const url = `https://api.spoonacular.com/recipes/complexSearch?apiKey=${API_SECRET}&number=21`;\n\n        await fetch(url)\n        .then(res => res.json())\n        .then(res => setFoods(res.results))\n        .catch(err =>  setError(err.message))\n      };\n\n      //calling the function\n     // getFoodsResponse();\n\n  },[]);\n\n\n  return(\n    <>\n    <div className=\"menu__title\">\n     <h2>Our <span>M</span>enu</h2>\n    </div>\n    <div className=\"food__cards\" id=\"menu\">\n      {foods?.map(food => <FoodCard {...food} key={food.id}/>)}\n    </div>\n    </>\n  );\n};\n\n\nexport default DisplayFoods;\n","/home/juanfran/code/Nerfi/food-app/src/components/UI/FoodCard.js",["63","64"],"import React from 'react';\nimport {Card, Button} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\n\nfunction FoodCard(props) {\n\n  //desestructurando los props\n  const {\n    image,\n    title,\n    id,\n    summary\n  } = props;\n\n  //replacing html tags\n  const replaceBtag = string => string.replace(/<.*?>/g, '')\n\n  return(\n    <Card style={{ width: '18rem', boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'}}>\n      <Card.Img variant=\"top\" src={image} />\n      <Card.Body>\n\n      <Link to={`meal/${id}`}>\n        <Card.Title> <strong>{title}</strong></Card.Title>\n      </Link>\n        <Link to={`meal/${id}`}>\n         <Button variant=\"primary\">See Recipe</Button>\n\n        </Link>\n      </Card.Body>\n      </Card>\n  )\n};\n\nexport default FoodCard;\n","/home/juanfran/code/Nerfi/food-app/src/components/UI/Home.js",[],"/home/juanfran/code/Nerfi/food-app/src/components/UI/Navbar.js",[],"/home/juanfran/code/Nerfi/food-app/src/components/SingleMeal.js",["65","66","67","68","69","70","71","72","73","74"],"import React, {useState,useEffect} from 'react';\nimport {useRouteMatch} from 'react-router-dom';\nimport './SingleMeal.css';\n\n\nfunction SingleMeal(props) {\n\n  const [response, setResponse] = useState({});\n  const [error, setError] = useState(null);\n\n\n  let {params} = useRouteMatch();\n  //secret key\n  const API_SECRET = process.env.REACT_APP_FOOD_KEY;\n\n  useEffect(() => {\n\n    const fetchSingleMeal = async () => {\n\n      const url = `https://api.spoonacular.com/recipes/${params.id}/information?apiKey=${API_SECRET}`;\n      //fetching data\n    await fetch(url)\n        .then(res => res.json())\n        .then(res => setResponse(res))\n        .catch(e => setError(e.message))\n    }\n\n    //calling the function\n    //fetchSingleMeal();\n\n  },[params.id]);\n\n  //deconstructing the object response\n  const {\n    image,\n    title,\n    summary,\n    sourceUrl,\n    spoonacularScore,\n    analyzedInstructions,\n    cuisines,\n    diets,\n    dishTypes,\n    vegan,\n    vegetarian,\n    extendedIngredients\n  } = response;\n\n\n  //extracting data from API steps response\n  const stepsAndMeasures = object => {\n      return object?.map(step => (\n        <div key={step.name}>\n         <p>{step.name.toUpperCase()}</p>\n         <div className=\"unitsAndAmount\">\n          <p className='amount'>{step.measures.us.amount}</p>\n          <p>{step.measures.us.unitShort}</p>\n         </div>\n        </div>\n     ));\n  }\n\n\n///replacing html tags\nconst replaceBtag = string => string.replace(/<.*?>/g, '')\n\nconst displaySteps = array => {\n  return array && (\n    <ol>\n      {array[0].steps.map((step, index) => <li key={index}> {step.step}</li>)}\n    </ol>\n    )\n  };\n//function in order to display the tags of each meal\nconst tagsOfMeal = array => array?.map(tag => <div className=\"meal__tag\">{tag}</div>);\n\n\n\n  return (\n    <div>\n    {error && error}\n      <div className=\"background\" style={{backgroundImage: `url(${image})`}}>\n        <div className=\"mealTitle\">\n         {title}\n        </div>\n      </div>\n    <div className=\"descriptionRecipe\">\n     {summary && replaceBtag(summary)}\n     <div className=\"originalUrl\">\n       <span>You can find the origin recipe here:</span>\n       <p><a href={sourceUrl} target=\"_blank\">See recipe</a></p>\n     </div>\n\n    </div>\n  <div className=\"displayStepsAndIngredients\">\n      <div className=\"ingredientsMeal\">\n       <h2>Ingrediensts</h2>\n       {stepsAndMeasures(extendedIngredients)}\n\n      </div>\n\n      <div className=\"mealSteps\">\n      <h2>Method</h2>\n       {analyzedInstructions && displaySteps(analyzedInstructions)}\n      </div>\n  </div>\n\n  </div>\n  )\n};\n\nexport default SingleMeal;\n","/home/juanfran/code/Nerfi/food-app/src/components/UI/AboutUs.js",[],"/home/juanfran/code/Nerfi/food-app/src/components/RandomMeal.js",["75","76","77"],"import  React,{useState} from 'react';\nimport './RandomMeal.css';\nimport FoodCard from './UI/FoodCard';\nimport TagsSelection from './UI/TagsSelection';\n\nfunction RandomMeal() {\n\n  const [random, setRandom] = useState([]);\n  //there is no error\n  const [error, setError] = useState(null);\n  //setting tags state\n  const [tags, setTags] = useState([]);\n  //loading state\n  const [loading, setLoading] = useState(false);\n  //secret key\n  const API_SECRET = process.env.REACT_APP_FOOD_KEY;\n\nconst select = (eventKey) => {\n  //checking if we have already the values on the state array\n  setTags((tags) => {\n    if (tags.includes(eventKey)) {\n      return tags;\n     }\n\n     return [...tags, eventKey];\n  });\n};\n\n  //make API call when the user has selected the tags and click the button\n  const fetchRandom = async () => {\n\n      //joining the user tags\n      const selectedTags = tags.join();\n\n      //making the request\n      await fetch(`https://api.spoonacular.com/recipes/random?number=6&tags=${selectedTags}&apiKey=${API_SECRET}`)\n        .then(response => response.json())\n        .then(res => setRandom({res: res.recipes}))\n  };\n\n\nreturn (\n    <div className='content'>\n      <div>{error && <p>something went wrong...</p>}</div>\n\n      <TagsSelection select={select} tags={tags}/>\n\n     <div className=\"button\">\n      <button onClick={fetchRandom}>Search for random recipies</button>\n     </div>\n\n     <div className=\"displayMeals\">\n      {random?.res?.map(meal => <FoodCard {...meal} key={meal.id}/> )}\n    </div>\n\n  </div>\n)\n\n};\n\nexport default RandomMeal;\n","/home/juanfran/code/Nerfi/food-app/src/components/UI/TagsSelection.js",[],"/home/juanfran/code/Nerfi/food-app/src/AuthContext/UserContext.js",[],"/home/juanfran/code/Nerfi/food-app/src/firebase/firebase.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":8,"column":10,"nodeType":"84","messageId":"85","endLine":8,"endColumn":15},{"ruleId":"82","severity":1,"message":"86","line":13,"column":13,"nodeType":"84","messageId":"85","endLine":13,"endColumn":29},{"ruleId":"82","severity":1,"message":"87","line":12,"column":5,"nodeType":"84","messageId":"85","endLine":12,"endColumn":12},{"ruleId":"82","severity":1,"message":"88","line":16,"column":9,"nodeType":"84","messageId":"85","endLine":16,"endColumn":20},{"ruleId":"82","severity":1,"message":"89","line":18,"column":11,"nodeType":"84","messageId":"85","endLine":18,"endColumn":26},{"ruleId":"90","severity":1,"message":"91","line":31,"column":5,"nodeType":"92","endLine":31,"endColumn":16,"suggestions":"93"},{"ruleId":"82","severity":1,"message":"94","line":39,"column":5,"nodeType":"84","messageId":"85","endLine":39,"endColumn":21},{"ruleId":"82","severity":1,"message":"95","line":41,"column":5,"nodeType":"84","messageId":"85","endLine":41,"endColumn":13},{"ruleId":"82","severity":1,"message":"96","line":42,"column":5,"nodeType":"84","messageId":"85","endLine":42,"endColumn":10},{"ruleId":"82","severity":1,"message":"97","line":43,"column":5,"nodeType":"84","messageId":"85","endLine":43,"endColumn":14},{"ruleId":"82","severity":1,"message":"98","line":44,"column":5,"nodeType":"84","messageId":"85","endLine":44,"endColumn":10},{"ruleId":"82","severity":1,"message":"99","line":45,"column":5,"nodeType":"84","messageId":"85","endLine":45,"endColumn":15},{"ruleId":"82","severity":1,"message":"100","line":75,"column":7,"nodeType":"84","messageId":"85","endLine":75,"endColumn":17},{"ruleId":"101","severity":1,"message":"102","line":91,"column":31,"nodeType":"103","endLine":91,"endColumn":46},{"ruleId":"82","severity":1,"message":"104","line":10,"column":17,"nodeType":"84","messageId":"85","endLine":10,"endColumn":25},{"ruleId":"82","severity":1,"message":"105","line":14,"column":10,"nodeType":"84","messageId":"85","endLine":14,"endColumn":17},{"ruleId":"82","severity":1,"message":"106","line":14,"column":19,"nodeType":"84","messageId":"85","endLine":14,"endColumn":29},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'getFoodsResponse' is assigned a value but never used.","'summary' is assigned a value but never used.","'replaceBtag' is assigned a value but never used.","'fetchSingleMeal' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'API_SECRET'. Either include it or remove the dependency array.","ArrayExpression",["109"],"'spoonacularScore' is assigned a value but never used.","'cuisines' is assigned a value but never used.","'diets' is assigned a value but never used.","'dishTypes' is assigned a value but never used.","'vegan' is assigned a value but never used.","'vegetarian' is assigned a value but never used.","'tagsOfMeal' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'setError' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},"Update the dependencies array to be: [API_SECRET, params.id]",{"range":"112","text":"113"},[740,751],"[API_SECRET, params.id]"]